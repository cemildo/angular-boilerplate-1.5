{
  "_args": [
    [
      "objectpath@https://registry.npmjs.org/objectpath/-/objectpath-1.2.1.tgz",
      "/Users/Dogan/cddev/swisssar-angular"
    ]
  ],
  "_from": "objectpath@>=1.2.1 <1.3.0",
  "_id": "objectpath@1.2.1",
  "_inCache": true,
  "_location": "/objectpath",
  "_phantomChildren": {},
  "_requested": {
    "name": "objectpath",
    "raw": "objectpath@https://registry.npmjs.org/objectpath/-/objectpath-1.2.1.tgz",
    "rawSpec": "https://registry.npmjs.org/objectpath/-/objectpath-1.2.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/objectpath/-/objectpath-1.2.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/angular-schema-form"
  ],
  "_resolved": "https://registry.npmjs.org/objectpath/-/objectpath-1.2.1.tgz",
  "_shasum": "c87433bdd352aea014e4f9c0b52d70a42652052e",
  "_shrinkwrap": null,
  "_spec": "objectpath@https://registry.npmjs.org/objectpath/-/objectpath-1.2.1.tgz",
  "_where": "/Users/Dogan/cddev/swisssar-angular",
  "author": {
    "email": "mike.marcacci@gmail.com",
    "name": "Mike Marcacci"
  },
  "bugs": {
    "url": "https://github.com/mike-marcacci/objectpath/issues"
  },
  "dependencies": {},
  "description": "Parse js object paths using both dot and bracket notation. Stringify an array of properties into a valid path.",
  "devDependencies": {
    "chai": "^1.9.1",
    "mocha": "^1.21.0"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/mike-marcacci/objectpath",
  "keywords": [
    "js object",
    "dot notation",
    "bracket notation",
    "path",
    "parse",
    "string",
    "object path",
    "object"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "objectpath",
  "optionalDependencies": {},
  "readme": "ObjectPath\n==========\n\n[![Join the chat at https://gitter.im/mike-marcacci/objectpath](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mike-marcacci/objectpath?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https://travis-ci.org/mike-marcacci/objectpath.svg?branch=master)](https://travis-ci.org/mike-marcacci/objectpath)\n\nParse js object paths using both dot and bracket notation. Stringify an array of properties into a valid path.\n\n- parse JS object reference fragments\n- build JS object reference fragments\n- supports presence of unicode characters\n- supports presence of control characters in key names\n\nParse a Path\n------------\n\nObjectPath.parse(str)\n\n```js\nvar ObjectPath = require('objectpath');\n\nObjectPath.parse('a[1].b.c.d[\"e\"][\"f\"].g');\n// => ['a','1','b','c','d','e','f','g']\n```\n\nBuild a Path String\n-------------------\n\nObjectPath.stringify(arr, [quote='\\'']);\n\n```js\nvar ObjectPath = require('objectpath');\n\nObjectPath.stringify(['a','1','b','c','d','e','f','g']);\n// => '[\\'a\\'][\\'1\\'][\\'b\\'][\\'c\\'][\\'d\\'][\\'e\\'][\\'f\\'][\\'g\\']'\n\n\nObjectPath.stringify(['a','1','b','c','d','e','f','g'],'\"');\n// => '[\"a\"][\"1\"][\"b\"][\"c\"][\"d\"][\"e\"][\"f\"][\"g\"]'\n```\n\nNormalize a Path\n----------------\n\nObjectPath.normalize(str)\n\n```js\nvar ObjectPath = require('objectpath');\n\nObjectPath.normalize('a[1].b.c.d[\"e\"][\"f\"].g');\n// => '[\"a\"][\"1\"][\"b\"][\"c\"][\"d\"][\"e\"][\"f\"][\"g\"]'\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mike-marcacci/objectpath.git"
  },
  "scripts": {
    "test": "mocha test/*"
  },
  "version": "1.2.1"
}
